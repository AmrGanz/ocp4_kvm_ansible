- name: Reset Envirnment
  hosts: localhost
  tasks:
    - name: Include vars [TASK]
      include_vars:
        file: vars/cluster_variables
      tags: vars

    - name: Delete clutser VMs
      shell: "for i in `virsh list --all --name | grep {{ cluster_name }}`; do virsh destroy --domain $i ; virsh undefine --domain $i --remove-all-storage; done"
    
    - name: Delete configured cluster network
      virt_net:
        state: absent
        name: "{{ cluster_name }}"
      ignore_errors: yes
        
    - name: Remove dnsmasq configurations
      file: 
        path: "/etc/dnsmasq.d/{{ cluster_name }}.conf"
        state: absent
      ignore_errors: yes
    
    - name: Remove cluster virtual interface from dnsmasq
      lineinfile:
        state: absent
        line: "except-interface={{ cluster_name }}"
        path: "/etc/dnsmasq.d/except-interfaces.conf"
      ignore_errors: yes
    
    - name: Cleaning /etc/hosts file from masters records
      lineinfile:
        path: /etc/hosts
        regexp: "master-.*.{{ cluster_name }}.{{ domain_name }}"
        state: absent
      ignore_errors: yes
    
    - name: Cleaning /etc/hosts file from etcd records
      lineinfile:
        path: /etc/hosts
        regexp: "etcd-.*.{{ cluster_name }}.{{ domain_name }}"
        state: absent
      ignore_errors: yes
    
    - name: Cleaning /etc/hosts file from workers records
      lineinfile:
        path: /etc/hosts
        regexp: "worker-.*.{{ cluster_name }}.{{ domain_name }}"
        state: absent
      ignore_errors: yes
    
    - name: Cleaning /etc/hosts file from loadbalancer record
      lineinfile:
        path: /etc/hosts
        regexp: "lb.{{ cluster_name }}.{{ domain_name }}"
        state: absent
      ignore_errors: yes
    
    - name: Cleaning /etc/hosts file from api record
      lineinfile:
        path: /etc/hosts
        regexp: "api.{{ cluster_name }}.{{ domain_name }}"
        state: absent
      ignore_errors: yes
    
    - name: Cleaning /etc/hosts file from api-int record
      lineinfile:
        path: /etc/hosts
        regexp: "api-int.{{ cluster_name }}.{{ domain_name }}"
        state: absent
      ignore_errors: yes
    
    - name: Cleaning /etc/hosts file from bootstrap record
      lineinfile:
        path: /etc/hosts
        regexp: "bootstrap.{{ cluster_name }}.{{ domain_name }}"
        state: absent
      ignore_errors: yes
    
    - name: Cleaning /root/.ssh/known_hosts file from masters records
      lineinfile:
        path: /root/.ssh/known_hosts
        regexp: "master-.*.{{ cluster_name }}.{{ domain_name }}"
        state: absent
      ignore_errors: yes
    
    - name: Cleaning /root/.ssh/known_hosts file from workers records
      lineinfile:
        path: /root/.ssh/known_hosts
        regexp: "worker-.*.{{ cluster_name }}.{{ domain_name }}"
        state: absent
      ignore_errors: yes
    
    - name: Cleaning /root/.ssh/known_hosts file from bootstrap record
      lineinfile:
        path: /root/.ssh/known_hosts
        regexp: "^bootstrap.{{ cluster_name }}.{{ domain_name }}.com"
        state: absent
      ignore_errors: yes
    
    - name: Cleaning /root/.ssh/known_hosts file from loadbalancer record
      lineinfile:
        path: /root/.ssh/known_hosts
        regexp: "^lb.{{ cluster_name }}.{{ domain_name }}"
        state: absent
      ignore_errors: yes

    - name: Delete downloads directory
      file:
        path: /var/www/html/downloads/
        state: absent
      when: delete_downloads|bool == true
      ignore_errors: yes
